{"version":3,"file":"single-table-dynamo.esm.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/AWS.ts","../src/SingleTableDocument.ts","../src/utils.ts","../src/createTable.ts","../src/config.ts","../src/getRepository.ts","../src/ensureTableAndIndexesAreCreated.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import AWS from 'aws-sdk';\nimport { ConfigurationOptions } from 'aws-sdk/lib/config';\n\nlet _docClient = new AWS.DynamoDB.DocumentClient();\n\nfunction getDocClient() {\n  return _docClient;\n}\n\nexport { AWS, getDocClient };\n\nexport function WORKAROUND_updateAWSConfig(ops: ConfigurationOptions, docClientOptions?: AWS.DynamoDB.DocumentClient.DocumentClientOptions) {\n  AWS.config.update(ops);\n  _docClient = new AWS.DynamoDB.DocumentClient({\n    ...ops,\n    ...docClientOptions\n  });\n}\n","\nexport function getDataFromDocument<T>(doc: SingleTableDocumentWithData<T>): T | null{\n  if (!doc) {\n    return null;\n  }\n  let res = {};\n  Object.keys(doc).forEach(key => {\n    if (!key.startsWith('__')) {\n      res[key] = doc[key];\n    }\n  });\n\n  return res as T;\n}\n\nexport type SingleTableDocumentWithData<T> = SingleTableDocument & T;\n\nexport type SingleTableDocument = {\n  __hashKey: string;\n  __sortKey?: string;\n\n  __objectType: string;\n\n  //sparse local secondary indexes that may or not be defined\n  __lsi0?: string;\n  __lsi1?: string;\n  __lsi2?: string;\n  __lsi3?: string;\n  __lsi4?: string;\n\n  //sparse global indexes that may or not be defined\n  __gsiHash0?: string;\n  __gsiSort0?: string;\n\n  __gsiHash1?: string;\n  __gsiSort1?: string;\n\n  __gsiHash2?: string;\n  __gsiSort2?: string;\n\n  __gsiHash3?: string;\n  __gsiSort3?: string;\n\n  __gsiHash4?: string;\n  __gsiSort4?: string;\n\n  __gsiHash5?: string;\n  __gsiSort5?: string;\n\n  __gsiHash6?: string;\n  __gsiSort6?: string;\n\n  __gsiHash7?: string;\n  __gsiSort7?: string;\n\n  __gsiHash8?: string;\n  __gsiSort8?: string;\n\n  __gsiHash9?: string;\n  __gsiSort9?: string;\n\n  __gsiHash10?: string;\n  __gsiSort10?: string;\n\n  __gsiHash11?: string;\n  __gsiSort11?: string;\n};\n","import { SingleTableDocument } from './SingleTableDocument';\n\nexport type KeyOfStr<T> = Extract<keyof T, string>;\n/**\n *\n * Each Local Secondary Index is named lsi1, lsi2, ... or lsi3\n * This function should be used when executing a query with a LSI\n *\n * @param i\n */\nexport function getLSIName(which: number): KeyOfStr<SingleTableDocument> {\n  return `__lsi${which}` as any;\n}\n\nexport function getLSISortKeyAttribute(\n  which: number\n): KeyOfStr<SingleTableDocument> {\n  return `__lsi${which}` as any;\n}\n\nexport function getGSIName(which: number): KeyOfStr<SingleTableDocument> {\n  return `__gsi${which}` as any;\n}\n\nexport function getGSIAttributeName(\n  which: number,\n  type: 'Sort' | 'Hash'\n): KeyOfStr<SingleTableDocument> {\n  return `__gsi${type}${which}` as any;\n}\n\n\nexport const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));","import { getLSIName, getLSISortKeyAttribute } from './utils';\nimport { AWS } from './AWS';\nimport {\n  CreateTableInput,\n  LocalSecondaryIndex,\n} from 'aws-sdk/clients/dynamodb';\nimport { Index } from './config';\n\nexport type CreateTableArgs = {\n  tableName?: string;\n};\n\nlet defaultTableName = 'SingleTable';\n\nexport function getDefaultTableName() {\n  return defaultTableName;\n}\n\nexport function setDefaultTableName(newName: string) {\n  defaultTableName = newName;\n}\n\nfunction range(start: number, end: number) {\n  let nums = [];\n  for (let i = start; i <= end; i++) {\n    nums.push(i);\n  }\n  return nums;\n}\n\ntype LSI = {\n  indexName: string;\n  sortKeyAttributeName: string;\n};\n\nexport function getGSIDef(index: Index<any, any>) {\n  if (index.type === 'globalSecondaryIndex') {\n    return {\n      IndexName: index.indexName,\n      KeySchema: [\n        { AttributeName: index.hashKeyAttribute, KeyType: 'HASH' },\n        { AttributeName: index.sortKeyAttribute, KeyType: 'RANGE' },\n      ],\n      Projection: {\n        ProjectionType: 'ALL',\n      },\n    };\n  }\n\n  throw {\n    message: `given index of type ${index.type}, expecting globalSecondaryIndex`,\n  };\n}\n\nexport function getCreateTableInput(args: { tableName: string, indexes?: Index<any,any>[]}) {\n  let localSecondaryIndexes = range(0, 4).map<LSI>(i => ({\n    indexName: getLSIName(i),\n    sortKeyAttributeName: getLSISortKeyAttribute(i),\n  }));\n\n  let globalSecondaryIndexes = (args.indexes || []).map(i => getGSIDef(i));\n\n  let createTableInput: CreateTableInput = {\n    TableName: args.tableName || getDefaultTableName(),\n    KeySchema: [\n      { AttributeName: '__hashKey', KeyType: 'HASH' },\n      { AttributeName: '__sortKey', KeyType: 'RANGE' },\n    ],\n    AttributeDefinitions: [\n      { AttributeName: '__hashKey', AttributeType: 'S' },\n      { AttributeName: '__sortKey', AttributeType: 'S' },\n      ...localSecondaryIndexes.map(i => ({\n        AttributeName: i.sortKeyAttributeName,\n        AttributeType: 'S' }\n      )),\n      ...(args.indexes as Index<any, any>[]).map(i => ({\n        AttributeName: i.sortKeyAttribute,\n        AttributeType: 'S',\n      })),\n      ...(args.indexes as Index<any, any>[]).map(i => ({\n        AttributeName: i.hashKeyAttribute,\n        AttributeType: 'S',\n      })),\n    ],\n    LocalSecondaryIndexes: [\n      ...localSecondaryIndexes.map<LocalSecondaryIndex>(i => ({\n        IndexName: i.indexName,\n        KeySchema: [\n          { AttributeName: '__hashKey', KeyType: 'HASH' },\n          { AttributeName: i.sortKeyAttributeName, KeyType: 'RANGE' },\n        ],\n        Projection: {\n          ProjectionType: 'ALL',\n        },\n      })),\n    ],\n    GlobalSecondaryIndexes: globalSecondaryIndexes,\n    BillingMode: 'PAY_PER_REQUEST',\n  };\n\n  if (createTableInput.LocalSecondaryIndexes!.length === 0) {\n    delete createTableInput.LocalSecondaryIndexes;\n  }\n  if (createTableInput.GlobalSecondaryIndexes!.length ===0) {\n    delete createTableInput.GlobalSecondaryIndexes;\n  }\n\n  return createTableInput;\n}\n\n// type GSI = {\n//     indexName: string\n//     sortKeyAttributeName: string\n//     hashKeyAttributeName: string\n// }\n/**\n *\n * Creates a table with 5 local secondary indexes\n *\n */\nexport function createTable(args: {\n  tableName: string;\n  indexes?: Index<any, any>[];\n}) {\n\n  const createTableInput = getCreateTableInput(args);\n\n  var client = new AWS.DynamoDB();\n  return client.createTable(createTableInput).promise()\n    .then(() => client.waitFor('tableExists', {TableName: createTableInput.TableName}))\n    .then(() => console.log(`${createTableInput.TableName} has been created`));\n}\n","import { SingleTableDocument } from './SingleTableDocument';\nimport {\n  KeyOfStr,\n  getLSISortKeyAttribute,\n  getGSIAttributeName,\n  getGSIName,\n  getLSIName,\n} from './utils';\nimport { getDefaultTableName } from './createTable';\n\nexport type PropList<T> = KeyOfStr<T>[];\nexport type PropList2<A, B> = (KeyOfStr<A> | KeyOfStr<B>)[];\ntype BaseIndex<ID, T> = {\n  isCustomIndex: boolean,\n  hashKeyFields: PropList2<ID, T>;\n  hashKeyDescriptor: string;\n  hashKeyAttribute: keyof SingleTableDocument | KeyOfStr<T>;\n\n  sortKeyFields: PropList2<ID, T>;\n  sortKeyDescriptor: string;\n  sortKeyAttribute: keyof SingleTableDocument | KeyOfStr<T>;\n\n  tag?: string;\n};\nexport type Index<ID, T> = (\n  | { type: 'primaryIndex' }\n  | {\n      type: 'localSecondaryIndex' | 'globalSecondaryIndex';\n      indexName: string;\n    }) &\n  BaseIndex<ID, T>;\n\nexport function getPrimaryIndex<ID, T>(\n  config: ConfigArgs<ID, T>,\n  tag: string = ''\n): Index<ID, T> {\n  return {\n    isCustomIndex: false,\n    hashKeyFields: config.hashKeyFields,\n    hashKeyDescriptor: config.objectName,\n    hashKeyAttribute: '__hashKey',\n\n    sortKeyFields: config.sortKeyFields || [],\n    sortKeyDescriptor: config.objectName,\n    sortKeyAttribute: '__sortKey',\n\n    type: 'primaryIndex',\n\n    tag,\n  };\n}\n\nfunction isPrimaryQueryArg(thing: any): thing is PrimaryQueryArg {\n  return thing && thing.isPrimary;\n}\n\nfunction isLSIQueryArg<T>(thing: any): thing is LSIQueryArg<T> {\n  return thing && thing.sortKeyFields && !thing.hashKeyFields;\n}\n\nfunction isGSIQueryArg<T>(thing: any): thing is GSIQueryArg<T> {\n  return thing && thing.sortKeyFields && thing.hashKeyFields;\n}\n\nfunction isCustomGSIQueryArg<T>(thing: any): thing is CustomGSIQueryArg<T> {\n  return thing && thing.hashKeyAttributeName && thing.sortKeyAttributeName;\n}\n\nexport function convertQueryArgToIndex<ID, T>(\n  queryName: string,\n  config: ConfigArgs<ID, T>\n): Index<ID, T> {\n  let index = (config.indexes || {})[queryName];\n  if (isPrimaryQueryArg(index)) {\n    return getPrimaryIndex(config, queryName);\n  } else if (isLSIQueryArg(index)) {\n    return getLSIIndex<ID, T>(queryName, index, config);\n  } else if (isGSIQueryArg(index)) {\n    return getGSIIndex<ID, T>(queryName, index, config);\n  } else if (isCustomGSIQueryArg(index)) {\n    return getCustomGSIIndex<ID, T>(queryName, index, config);\n  } else {\n    throw { message: `${queryName} is not valid` };\n  }\n}\nexport function getLSIIndex<ID, T>(\n  queryName: string,\n  i: LSIQueryArg<T>,\n  config: ConfigArgs<ID, T>\n): Index<ID, T> {\n  return {\n    isCustomIndex: false,\n    hashKeyFields: config.hashKeyFields,\n    hashKeyDescriptor: config.objectName,\n    hashKeyAttribute: '__hashKey',\n\n    sortKeyFields: i.sortKeyFields,\n    sortKeyDescriptor: queryName,\n    sortKeyAttribute: getLSISortKeyAttribute(\n      i.which\n    ) as keyof SingleTableDocument,\n\n    indexName: getLSIName(i.which),\n\n    type: 'localSecondaryIndex',\n\n    tag: queryName,\n  };\n}\n\nexport function getCustomGSIIndex<ID, T>(\n  queryName: string,\n  i: CustomGSIQueryArg<T>,\n  config: ConfigArgs<ID, T>\n): Index<ID, T> {\n  return {\n    isCustomIndex: true,\n    hashKeyFields: [],\n    hashKeyDescriptor: config.objectName + '-' + queryName,\n    hashKeyAttribute: i.hashKeyAttributeName,\n\n    sortKeyFields: [],\n    sortKeyDescriptor: queryName,\n    sortKeyAttribute: i.sortKeyAttributeName,\n\n    indexName: i.indexName || queryName,\n\n    type: 'globalSecondaryIndex',\n\n    tag: queryName,\n  }\n}\n\nexport function getGSIIndex<ID, T>(\n  queryName: string,\n  i: GSIQueryArg<T>,\n  config: ConfigArgs<ID, T>\n): Index<ID, T> {\n  return {\n    isCustomIndex: false,\n    hashKeyFields: i.hashKeyFields,\n    hashKeyDescriptor: config.objectName + '-' + queryName,\n    hashKeyAttribute: getGSIAttributeName(\n      i.which,\n      'Hash'\n    ) as keyof SingleTableDocument,\n\n    sortKeyFields: i.sortKeyFields,\n    sortKeyDescriptor: queryName,\n    sortKeyAttribute: getGSIAttributeName(\n      i.which,\n      'Sort'\n    ) as keyof SingleTableDocument,\n\n    indexName: getGSIName(i.which),\n\n    type: 'globalSecondaryIndex',\n\n    tag: queryName,\n  };\n}\n\ntype PrimaryQueryArg = {\n  isPrimary: true;\n};\n\ntype LSIQueryArg<T> = {\n  sortKeyFields: PropList<T>;\n  type?: 'localSecondaryIndex';\n  which: 0 | 1 | 2 | 3 | 4;\n};\n\ntype CustomGSIQueryArg<T> = {\n  type: 'globalSecondaryIndex'\n  hashKeyAttributeName: KeyOfStr<T>,\n  sortKeyAttributeName: KeyOfStr<T>,\n  indexName?: string\n}\n\ntype GSIQueryArg<T> = {\n  sortKeyFields: PropList<T>;\n  hashKeyFields: PropList<T>;\n  type?: 'globalSecondaryIndex';\n  which:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4\n    | 5\n    | 6\n    | 7\n    | 8\n    | 9\n    | 10\n    | 11\n    | 12\n    | 13\n    | 14\n    | 15\n    | 16\n    | 17\n    | 18\n    | 19;\n};\n\nexport type ConfigArgs<ID, T, QueryNames = string> = {\n  tableName?: string;\n  objectName: string;\n  hashKeyFields: PropList<ID>;\n  sortKeyFields?: PropList<ID>;\n  compositeKeySeparator?: '#';\n  shouldPadNumbersInIndexes?: boolean,\n  paddedNumberLength?: number,\n  indexes?: Record<\n    Extract<QueryNames, string>,\n    GSIQueryArg<T> | LSIQueryArg<T> | PrimaryQueryArg | CustomGSIQueryArg<T>\n  >;\n};\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport function getConfig<ID, T>(\n  argsIn: PartialBy<ConfigArgs<ID, T>, 'indexes'>\n): Config<ID, T> {\n  const args: ConfigArgs<ID, T> = Object.assign({\n    shouldPadNumbersInIndexes: true,\n    paddedNumberLength: 20,\n    queries: {}\n  }, argsIn);\n  let indexes = [\n    getPrimaryIndex(args),\n    ...(args.indexes\n      ? Object.keys(args.indexes).map(queryName =>\n          convertQueryArgToIndex(queryName, args)\n        )\n      : []),\n  ];\n\n  let indexesByTag = indexes.reduce((prev, index) => {\n    return {\n      ...prev,\n      [index.tag as string]: index,\n    };\n  }, {});\n\n  return Object.assign(\n    {\n      tableName: args.tableName || getDefaultTableName(),\n      compositeKeySeparator: args.compositeKeySeparator || '#',\n      shouldPadNumbersInIndexes: args.shouldPadNumbersInIndexes!,\n      paddedNumberLength: args.paddedNumberLength || 20\n    },\n    {\n      objectName: args.objectName,\n      primaryIndex: indexes[0],\n      indexes,\n      indexesByTag,\n    }\n  );\n}\n\nexport type Config<ID, T, QueryNames = string> = Readonly<{\n  tableName: string;\n  objectName: string;\n  primaryIndex: Index<ID, T>;\n  indexes: Index<ID, T>[];\n  paddedNumberLength: number\n  shouldPadNumbersInIndexes: boolean\n  indexesByTag: Record<Extract<QueryNames, string>, Index<ID, T>>;\n  compositeKeySeparator: string;\n}>;\n","import { getDocClient } from './AWS';\nimport { SingleTableDocument, SingleTableDocumentWithData, getDataFromDocument } from './SingleTableDocument';\nimport { ConfigArgs, Index, Config, getConfig } from './config';\nimport { KeyOfStr } from './utils';\nimport { DocumentClient } from 'aws-sdk/clients/dynamodb';\n\nclass QueryBuilder<ID = any, T = any, IndexNames = string> {\n  clause: WhereClause<T, IndexNames>;\n  repo: Repository<ID, T, IndexNames>\n\n  constructor(repo: Repository<ID, T, IndexNames>) {\n    this.clause = {\n      args: {},\n    }\n    this.repo = repo;\n  }\n\n  where(parts: Partial<T>) {\n    this.clause.args = parts;\n    return this;\n  }\n\n  sortBy(key: KeyOfStr<T>) {\n    this.clause.sortBy = key;\n    return this;\n  }\n\n  sortDirection(direction: 'asc' | 'desc') {\n    this.clause.sort = direction;\n    return this;\n  }\n\n  index(index: IndexNames) {\n    this.clause.index = index;\n    return this;\n  }\n\n  cursor(cursor: Record<string,any>) {\n    this.clause.cursor = cursor;\n    return this;\n  }\n\n  limit(limit: number) {\n    this.clause.limit = limit;\n    return this;\n  }\n\n  setClause(clause: WhereClause<T, IndexNames>) {\n    this.clause = clause;\n    return this;\n  }\n\n  get() {\n    let index = this.repo.findIndexForQuery(this.clause);\n\n    if (!index) {\n      throw { message: 'there isnt an index configured for this query' };\n    }\n\n    return this.repo.executeQuery(this.clause, index);\n  }\n\n  async getOne(): Promise<T | null> {\n    const res = await this.limit(1).get();\n    if (res.results.length > 0) {\n      return res.results[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Repeatedly pages over the given query until all items have been queried\n   * If a query has more pages than fit in memory, errors will happen\n   */\n  async getAll() {\n    let res = await this.get();\n    while (res.nextPageArgs) {\n      let next = await this.setClause(res.nextPageArgs as any).get();\n      res = {\n        results: res.results.concat(next.results),\n        nextPageArgs: next.nextPageArgs\n      }\n    };\n    return res;\n  }\n\n  async deleteAll() {\n    let hasMore = true;\n    //the max items for batch delete is 25\n    //todo: limit paging to 25 in batchDelete\n    let res = await this.limit(25).get();\n    while (hasMore) {\n      await this.repo.batchDelete(res.results as any);\n      if (res.nextPageArgs) {\n        res = await this.setClause(res.nextPageArgs as any).get();\n      } else {\n        hasMore = false;\n      }\n    };\n    return true;\n  }\n}\n\n\nexport type WhereClause<T = any, IndexNames = string> = {\n  sort?: 'asc' | 'desc';\n  args: Partial<T>;\n  index?: IndexNames;\n  sortBy?: KeyOfStr<T>;\n  cursor?: Record<string, any>;\n  limit?: number;\n};\n\nexport type QueryResult<T> = {\n  results: T[];\n  nextPageArgs?: WhereClause<T>;\n};\n\n/**\n *\n * @param thing\n * @param properties\n * @param descriptor\n * @param separator\n *\n * return \"{descriptor}#{properties[0]}-{thing[properties[0]]}#...\"\n */\nexport function getCompositeKeyValue<ID, T>(\n  thing: T,\n  properties: (keyof T | keyof ID)[],\n  descriptor: string,\n  separator: string,\n  shouldPadNumbersInIndexes: boolean\n) {\n  return [\n    descriptor,\n    ...properties.map(k =>\n      dynamoProperty(k as string, thing[k as keyof T], shouldPadNumbersInIndexes)\n    ),\n  ].join(separator);\n}\n\nexport function getCustomKeyValue<T>(\n  thing: T,\n  propertyName: (keyof T)\n) {\n  return thing[propertyName];\n}\n\nfunction padDecimalNumber(value: number) {\n  let [before, after] = String(value).split('.');\n\n  return [(before || '').padStart(18, '0'), (after || '').padEnd(2, '0')].join('.')\n}\n\n/**\n *\n * To make generic dynamo fields more readable, they are saved in the following format\n * <fieldName>-<fieldValue>, eg userId-2039848932\n *\n * This function should be used whenever saving attributes to a composite index\n *\n * @param key\n * @param value\n */\nexport function dynamoProperty(key: string, value: any, shouldPadNumbersInIndexes: boolean) {\n  let stringified = String(value);\n  if (typeof value === 'number' && value >= 0 && shouldPadNumbersInIndexes) {\n    stringified = padDecimalNumber(value as number);\n  }\n  return `${key}-${stringified}`;\n}\n\nexport function getSortkeyForBeginsWithQuery<ID, T>(\n  thing: Partial<T>,\n  indexFields: (keyof T | keyof ID)[],\n  descriptor: string,\n  compositeKeySeparator: string,\n  shouldPadNumbersInIndexes: boolean\n) {\n  let fields = [descriptor];\n  for (let i = 0; i < indexFields.length; i++) {\n    let k = indexFields[i];\n    if (k as string in thing) {\n      fields.push(dynamoProperty(k as string, String(thing[k as keyof T]), shouldPadNumbersInIndexes));\n    } else {\n      break;\n    }\n  }\n  return fields.join(compositeKeySeparator);\n}\n\nexport function findIndexForQuery<ID, T, QueryNames>(\n  where: WhereClause<T, QueryNames>,\n  config: Config<ID, T, QueryNames>\n): Index<ID, T> | null {\n  if (where.index) {\n    if (config.indexesByTag[(where.index as unknown) as any]) {\n      return config.indexesByTag[(where.index as unknown) as any];\n    } else {\n      throw {\n        message: `The index \"${\n          where.index\n          }\" does not exist, the following are valid indexes: ${Object.keys(\n            config.indexesByTag\n          ).join(',')}`,\n      };\n    }\n  }\n\n  let indexes = config.indexes;\n\n  for (let i = 0; i < indexes.length; i++) {\n    let index = indexes[i];\n    let neededFields = new Set(Object.keys(where.args) as (\n      | keyof ID\n      | keyof T)[]);\n\n    //for this index to be eligible, we need every hashKey field to be provided in the query\n    let queryContainsAllHashKeyFields = index.hashKeyFields.every(k =>\n      neededFields.has(k)\n    );\n\n    //query contains all hash key fields\n    if (queryContainsAllHashKeyFields) {\n      index.hashKeyFields.forEach(k => neededFields.delete(k));\n      const sortKeyFieldIndex = neededFields.size;\n      //ensure that the first n fields of this index are included in the where clause\n      index.sortKeyFields\n        .slice(0, neededFields.size)\n        .forEach(k => neededFields.delete(k));\n\n      //all the specified fields are in the correct place for this index\n      if (neededFields.size === 0) {\n        //check if this config has a sort and if it's in the right place\n        if (where.sortBy) {\n          if (index.sortKeyFields.indexOf(where.sortBy) === sortKeyFieldIndex) {\n            return index;\n          }\n        } else {\n          return index;\n        }\n      }\n    }\n  }\n  return null;\n}\n\n//type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nfunction getKey<ID, T>(\n  id: ID | T,\n  i: Index<ID, T>,\n  separator: string,\n  shouldPadNumbersInIndexes: boolean\n): Partial<SingleTableDocument> {\n  return {\n    [i.hashKeyAttribute]: getCompositeKeyValue(\n      id as any,\n      i.hashKeyFields as (keyof ID)[],\n      i.hashKeyDescriptor,\n      separator,\n      shouldPadNumbersInIndexes\n    ),\n    [i.sortKeyAttribute]: getCompositeKeyValue(\n      id as any,\n      i.sortKeyFields as (keyof ID)[],\n      i.sortKeyDescriptor,\n      separator,\n      shouldPadNumbersInIndexes\n    ),\n  };\n}\n\ntype IndexQueryBuilderMap<ID, T, QueryNames> = Record<\n  Extract<QueryNames, string>,\n  () => QueryBuilder<ID, T, QueryNames>\n>;\n\nexport type Repository<ID = any, T = any, IndexNames = string> = {\n  config: Config<ID, T>;\n  getKey: (id: ID) => any;\n  get: (id: ID) => Promise<T | null>;\n  update: (id: ID, updates: Partial<T>) => Promise<T>;\n  overwrite: (thing: T) => Promise<T>;\n  put: (thing: T) => Promise<T>;\n  delete: (id: ID) => Promise<boolean>;\n  batchDelete: (ids: ID[]) => Promise<boolean[]>;\n  batchGet: (ids: ID[]) => Promise<(T | null)[]>;\n  formatForDDB: (thing: T) => SingleTableDocumentWithData<T>;\n  executeQuery: (\n    where: WhereClause<T, IndexNames | any>,\n    index: Index<ID, T>\n  ) => Promise<QueryResult<T>>;\n  getSortKeyAndHashKeyForQuery(where: WhereClause<T, IndexNames | any>, index: Index<ID, T>): { sortKey: string, hashKey: string }\n  getQueryArgs(where: WhereClause<T, IndexNames | any>, index: Index<ID, T>): DocumentClient.QueryInput\n  query: (clause?: WhereClause<T, IndexNames | any>) => QueryBuilder<ID, T, IndexNames>\n  findIndexForQuery: (where: WhereClause<T, IndexNames | any>) => Index<ID, T> | null;\n  getDocClient: () => AWS.DynamoDB.DocumentClient\n  indexes: IndexQueryBuilderMap<ID, T, IndexNames | any>;\n  getCursor: (thing: T, index?: Index<ID, T>) => Record<string, any>\n};\n\n//const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport function getRepository<ID, T, QueryNames = string>(\n  args: ConfigArgs<ID, T, QueryNames>\n): Repository<ID, T, QueryNames> {\n  let config = getConfig(args);\n  let repo: Repository<ID, T, QueryNames> = {\n    getDocClient: getDocClient,\n    get config() {\n      return config;\n    },\n    getCursor: (thing, index) => {\n      const formatted = repo.formatForDDB(thing);\n\n      const cursor = {\n        [config.primaryIndex.hashKeyAttribute]: formatted[config.primaryIndex.hashKeyAttribute],\n        [config.primaryIndex.sortKeyAttribute]: formatted[config.primaryIndex.sortKeyAttribute],\n        ...(index && { [index.hashKeyAttribute]: formatted[index.hashKeyAttribute] }),\n        ...(index && { [index.sortKeyAttribute]: formatted[index.sortKeyAttribute] })\n      } as any;\n\n      return cursor;\n    },\n    getKey: (id: ID) => {\n      const key = getKey(id, config.primaryIndex, config.compositeKeySeparator, config.shouldPadNumbersInIndexes);\n      return key;\n    },\n    get: async (id: ID): Promise<T | null> => {\n\n      let res = await repo.batchGet([id]);\n      return res[0];\n    },\n    batchGet: async (ids: ID[]): Promise<(T | null)[]> => {\n      if (ids.length === 0) {return [];}\n      let res = await getDocClient()\n        .batchGet({\n          RequestItems: {\n            [config.tableName]: {\n              Keys: ids.map(repo.getKey)\n            }\n          }\n        })\n        .promise();\n      if (res.Responses && res.Responses[config.tableName]) {\n        return res.Responses[config.tableName].map(doc => {\n          if (doc) {\n            return getDataFromDocument(doc as SingleTableDocumentWithData<T>);\n          } else {\n            return null;\n          }\n        })\n      }\n\n      return [];\n    },\n    update: async (id: ID, thing: Partial<T>): Promise<T> => {\n      let old = (await repo.get(id)) as T;\n      let updated = { ...old, ...thing };\n      return repo.overwrite(updated);\n    },\n    put: (thing: T): Promise<T> => {\n      return repo.overwrite(thing);\n    },\n    overwrite: async (thing: T): Promise<T> => {\n      await getDocClient()\n        .put({\n          TableName: config.tableName,\n          Item: repo.formatForDDB(thing),\n        })\n        .promise();\n      return thing;\n    },\n    delete: async (id: ID): Promise<boolean> => {\n      await repo.batchDelete([id]);\n      return true;\n    },\n    batchDelete: async (ids: ID[]): Promise<boolean[]> => {\n      if (ids.length === 0) { return []; }\n      await getDocClient()\n        .batchWrite({\n          RequestItems: {\n            [config.tableName]: ids.map(id => ({\n              DeleteRequest: {\n                Key: repo.getKey(id)\n              }\n            }))\n          }\n        })\n        .promise()\n      return ids.map(() => true);\n    },\n    getSortKeyAndHashKeyForQuery(where: WhereClause<T, QueryNames>, index: Index<ID, T>) {\n      if (index.isCustomIndex) {\n        const hashKey = where.args[index.hashKeyAttribute as any];\n        const sortKey = where.args[index.sortKeyAttribute as any];\n        return { hashKey, sortKey };\n      } else {\n        const hashKey = getCompositeKeyValue<ID, T>(\n          where.args as T,\n          index.hashKeyFields,\n          index.hashKeyDescriptor,\n          config.compositeKeySeparator,\n          config.shouldPadNumbersInIndexes\n        );\n\n\n        const sortKey =\n          index.sortKeyFields &&\n          getSortkeyForBeginsWithQuery<ID, T>(\n            where.args,\n            index.sortKeyFields,\n            index.sortKeyDescriptor,\n            config.compositeKeySeparator,\n            config.shouldPadNumbersInIndexes\n          );\n\n        return { sortKey, hashKey };\n      }\n\n    },\n    getQueryArgs(where: WhereClause<T, QueryNames>, index: Index<ID, T>): DocumentClient.QueryInput {\n      const { sortKey, hashKey } = this.getSortKeyAndHashKeyForQuery(where, index);\n      const args = {\n        TableName: config.tableName,\n        ...((index as any).indexName && {\n          IndexName: (index as any).indexName,\n        }),\n        Limit: where.limit || 5,\n        ScanIndexForward: where.sort === 'asc',\n        KeyConditionExpression: `#hKeyAttribute = :hKey ${sortKey ? 'and begins_with(#sKeyAttribute, :sKey)' : ''}`,\n        ExpressionAttributeNames: {\n          '#hKeyAttribute': index.hashKeyAttribute,\n          ...(sortKey && {\n            '#sKeyAttribute': index.sortKeyAttribute,\n          })\n        },\n        ExpressionAttributeValues: {\n          ':hKey': hashKey,\n          ...(sortKey && {\n            ':sKey': sortKey,\n          })\n        },\n        ...(where.cursor && {\n          ExclusiveStartKey: where.cursor,\n        }),\n      }\n      return args;\n    },\n    executeQuery: async (\n      where: WhereClause<T, QueryNames>,\n      index: Index<ID, T>\n    ): Promise<QueryResult<T>> => {\n      let res = await getDocClient()\n        .query(repo.getQueryArgs(where, index))\n        .promise();\n\n      let nextWhere: WhereClause<T, QueryNames> | undefined = res &&\n        res.LastEvaluatedKey && {\n        ...where,\n        cursor: (res as any).LastEvaluatedKey,\n      };\n\n      return {\n        results: (res as any).Items.map((i: SingleTableDocumentWithData<T>) => {\n          return getDataFromDocument(i);\n        }),\n        nextPageArgs: nextWhere as unknown as any,\n      };\n    },\n    query: (clause?: WhereClause<T, QueryNames>) => {\n      const builder = new QueryBuilder<ID, T, QueryNames>(repo);\n      if (clause) {\n        return builder.setClause(clause);\n      } else {\n        return builder;\n      }\n    },\n    formatForDDB(thing: T) {\n      let obj: Partial<SingleTableDocumentWithData<T>> = {\n        ...thing,\n        __objectType: config.objectName,\n      };\n\n      config.indexes.filter(i => !i.isCustomIndex).forEach(i => {\n        obj = {\n          ...obj,\n          ...getKey(thing, i, config.compositeKeySeparator, config.shouldPadNumbersInIndexes),\n        };\n      });\n\n      return obj as SingleTableDocumentWithData<T>;\n    },\n    findIndexForQuery: (where: WhereClause<T, QueryNames>) => {\n      return findIndexForQuery<ID, T, QueryNames>(where, config);\n    },\n    indexes: Object.keys(config.indexesByTag).reduce(\n      (obj: any, key: string) => {\n        obj[key] = () => repo.query().index(key as any);\n        return obj;\n      },\n      {}\n    ) as IndexQueryBuilderMap<ID, T, QueryNames>,\n  };\n  return repo;\n}\n","import { AWS } from './AWS';\nimport { Repository } from './getRepository';\nimport { Index } from './config';\nimport { createTable, getGSIDef, getCreateTableInput } from './createTable';\n\nexport const getTablesAndIndexes = (\n  repos: Repository[]\n) => {\n  let tables: {\n    [tableName: string]: {\n      [indexName: string]: Index<any, any>;\n    };\n  } = {};\n\n  repos\n    .map(c => c.config)\n    .forEach(c => {\n      if (!tables[c.tableName]) {\n        tables[c.tableName] = {};\n      }\n      c.indexes.forEach(i => {\n        if (i.type === 'globalSecondaryIndex') {\n          tables[c.tableName][i.indexName] = i;\n        }\n      });\n    });\n\n    return tables;\n};\n\nexport function getCreateTableInputs(repos: Repository[]) {\n  const tables = getTablesAndIndexes(repos);\n\n  return Object.keys(tables).map(t => \n    getCreateTableInput({ tableName: t, indexes: Object.values(tables[t])})\n  );\n}\n\nexport async function ensureTableAndIndexesExist(repos: Repository[]) {\n  let tables = getTablesAndIndexes(repos);\n  let tableNames = Object.keys(tables);\n\n  for (let i = 0; i < tableNames.length; i++) {\n    let tableName = tableNames[i];\n    await ensureTableIsConfigured(tableNames[i], tables[tableName]);\n  }\n}\n\nasync function getTableDescription(\n  client: AWS.DynamoDB,\n  tableName: string\n): Promise<AWS.DynamoDB.TableDescription | null> {\n  try {\n    console.log('calling for describeTable');\n    let description = await client\n      .describeTable({ TableName: tableName })\n      .promise();\n\n    if (description.Table) {\n      console.log('returning table description');\n      return description.Table;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.log('returning nullll');\n  return null;\n}\n\nasync function ensureTableIsConfigured(\n  tableName: string,\n  indexes: Record<string, Index<any, any>>\n) {\n  const client = new AWS.DynamoDB();\n  console.log(`checking if the table \"${tableName}\" has already been created`);\n\n  let table = await getTableDescription(client, tableName);\n  console.log('got the description', table);\n  let indexesToBeCreated = { ...indexes };\n\n  if (!table) {\n    let ins = Object.values(indexesToBeCreated);\n    console.log(`table \"${tableName}\" does not exist, creating it now`);\n    await createTable({ tableName, indexes: ins });\n    console.log(\n      `table \"${tableName}\" created with the following indexes ${Object.keys(\n        indexesToBeCreated\n      ).join(',')}`\n    );\n    return;\n  }\n\n  console.log(`table \"${tableName}\" already exists, checking the indexes`);\n\n  if (table) {\n    (table.GlobalSecondaryIndexes || []).forEach(i => {\n      delete indexesToBeCreated[i.IndexName || ''];\n    });\n  }\n  let toCreate = Object.values(indexesToBeCreated);\n  if (toCreate.length > 0) {\n    console.log(\n      `creating the following indexes ${Object.keys(indexesToBeCreated).join(\n        ','\n      )} to table ${tableName}`\n    );\n    await client\n      .updateTable({\n        TableName: tableName,\n        AttributeDefinitions: toCreate.reduce<\n          { AttributeName: string; AttributeType: string }[]\n        >((prev, index) => {\n          return prev.concat([\n            {\n              AttributeName: index.sortKeyAttribute as string,\n              AttributeType: 'S',\n            },\n            {\n              AttributeName: index.hashKeyAttribute as string,\n              AttributeType: 'S',\n            },\n          ]);\n        }, []),\n        GlobalSecondaryIndexUpdates: toCreate.map(i => ({\n          Create: getGSIDef(i),\n        })),\n      })\n      .promise();\n    await client.waitFor('tableExists', { TableName: tableName });\n  } else {\n    console.log(`the table ${tableName} has all the necessary indexes`);\n  }\n}\n"],"names":["_docClient","AWS","DynamoDB","DocumentClient","getDocClient","WORKAROUND_updateAWSConfig","ops","docClientOptions","config","update","getDataFromDocument","doc","res","Object","keys","forEach","key","startsWith","getLSIName","which","getLSISortKeyAttribute","getGSIName","getGSIAttributeName","type","defaultTableName","getDefaultTableName","setDefaultTableName","newName","range","start","end","nums","i","push","getGSIDef","index","IndexName","indexName","KeySchema","AttributeName","hashKeyAttribute","KeyType","sortKeyAttribute","Projection","ProjectionType","message","getCreateTableInput","args","localSecondaryIndexes","map","sortKeyAttributeName","globalSecondaryIndexes","indexes","createTableInput","TableName","tableName","AttributeDefinitions","AttributeType","LocalSecondaryIndexes","GlobalSecondaryIndexes","BillingMode","length","createTable","client","promise","then","waitFor","console","log","getPrimaryIndex","tag","isCustomIndex","hashKeyFields","hashKeyDescriptor","objectName","sortKeyFields","sortKeyDescriptor","isPrimaryQueryArg","thing","isPrimary","isLSIQueryArg","isGSIQueryArg","isCustomGSIQueryArg","hashKeyAttributeName","convertQueryArgToIndex","queryName","getLSIIndex","getGSIIndex","getCustomGSIIndex","getConfig","argsIn","assign","shouldPadNumbersInIndexes","paddedNumberLength","queries","indexesByTag","reduce","prev","compositeKeySeparator","primaryIndex","QueryBuilder","repo","clause","where","parts","sortBy","sortDirection","direction","sort","cursor","limit","setClause","get","findIndexForQuery","executeQuery","getOne","results","getAll","nextPageArgs","next","concat","deleteAll","hasMore","batchDelete","getCompositeKeyValue","properties","descriptor","separator","k","dynamoProperty","join","padDecimalNumber","value","String","split","before","after","padStart","padEnd","stringified","getSortkeyForBeginsWithQuery","indexFields","fields","neededFields","Set","queryContainsAllHashKeyFields","every","has","sortKeyFieldIndex","size","slice","indexOf","getKey","id","getRepository","getCursor","formatted","formatForDDB","batchGet","ids","RequestItems","Keys","Responses","old","updated","overwrite","put","Item","batchWrite","DeleteRequest","Key","getSortKeyAndHashKeyForQuery","hashKey","sortKey","getQueryArgs","Limit","ScanIndexForward","KeyConditionExpression","ExpressionAttributeNames","ExpressionAttributeValues","ExclusiveStartKey","query","nextWhere","LastEvaluatedKey","Items","builder","obj","__objectType","filter","ensureTableIsConfigured","getTableDescription","table","indexesToBeCreated","toCreate","values","updateTable","GlobalSecondaryIndexUpdates","Create","ins","describeTable","description","Table","e","ensureTableAndIndexesExist","repos","tables","getTablesAndIndexes","tableNames","c"],"mappings":"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"}